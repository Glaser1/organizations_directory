"""initial migration

Revision ID: 9ebcd4d1010a
Revises:
Create Date: 2025-03-03 19:57:39.016870

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = "9ebcd4d1010a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "parent_id != id", name="check_parent_id_not_equal_id"
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["activities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_activities_title", "activities", ["title"], unique=False
    )
    op.create_table(
        "buildings",
        sa.Column("address", sa.String(length=200), nullable=False),
        sa.Column(
            "geo_location",
            geoalchemy2.types.Geometry(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("address"),
    )

    op.create_table(
        "organizations",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["building_id"],
            ["buildings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title"),
    )
    op.create_index(
        "ix_organizations_title", "organizations", ["title"], unique=False
    )
    op.create_table(
        "organization_activity",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "activity_id"),
    )
    op.create_table(
        "phone_numbers",
        sa.Column("phone", sa.String(length=20), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organizations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("phone_numbers")
    op.drop_table("organization_activity")
    op.drop_index("ix_organizations_title", table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(
        "idx_buildings_geo_location",
        table_name="buildings",
        postgresql_using="gist",
    )
    op.drop_table("buildings")
    op.drop_index("ix_activities_title", table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
